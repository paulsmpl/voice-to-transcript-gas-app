pipeline {
  agent any
  environment {
    GAS_BASE_URL   = credentials('gas_base_url')
    GAS_TOKEN      = credentials('gas_token')
    OPENAI_API_KEY = credentials('openai_api_key')
    GAS_URL        = credentials('gas_url')
    GAS_DOC_ID     = credentials('gas_doc_id')
    KEEP_PCT       = '20'
    MODE           = 'DAILY'
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/paulsmpl/voice-to-transcript-gas-app.git'
      }
    }
    stage('Setup Python venv') {
      steps {
        sh '''
          apt-get update
          apt-get install -y python3 python3-pip python3.11-venv python3-venv python3-full ffmpeg build-essential
          /usr/bin/python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
        '''
      }
    }
    stage('Compute date') {
      steps {
        script {
          if (env.MODE == 'DAILY') {
            env.DATE_TO_PROCESS = sh(
              script: ". venv/bin/activate && python - <<'PY'\nfrom datetime import datetime,timedelta;print((datetime.utcnow()-timedelta(days=1)).strftime('%Y-%m-%d'))\nPY",
              returnStdout: true
            ).trim()
          }
        }
      }
    }
    stage('Process daily') {
      when { expression { env.MODE == 'DAILY' } }
      steps {
        sh '''
          . venv/bin/activate
          # 1) Check status
          curl -sSL "${GAS_BASE_URL}?action=status&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}" -o status.json
          python - <<'PY'
import json,sys
s=json.load(open('status.json'))
if not s.get('hasInput'): sys.exit(0)
if s.get('hasBestof'): sys.exit(0)
PY
          # 2) Get download URL
          ZIP_URL=$(curl -sSL "${GAS_BASE_URL}?action=zip&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}" | jq -r .url)
          # 3) Download audios
          curl -sSL "$ZIP_URL" -o "audios_${DATE_TO_PROCESS}.zip"
          # 4) Best-of
          export OPENAI_API_KEY="${OPENAI_API_KEY}"
          python zip_bestof_whisperx_jenk.py audios_${DATE_TO_PROCESS}.zip \
            --keep_pct ${KEEP_PCT} \
            --out_dir out_${DATE_TO_PROCESS} \
            --gas_url "${GAS_URL}" \
            --doc_id "${GAS_DOC_ID}"
          # 5) Upload
          curl -sS -X POST "${GAS_BASE_URL}?action=uploadBestof&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}" \
               --data-binary @out_${DATE_TO_PROCESS}/bestof.mp3
          # 6) Archive
          curl -sS -X POST "${GAS_BASE_URL}?action=archive&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}"
        '''
      }
    }
  }
}
