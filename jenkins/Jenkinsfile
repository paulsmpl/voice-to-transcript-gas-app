pipeline {
  agent any
  environment {
    GAS_BASE_URL   = credentials('gas_base_url')   // pour récupérer les audios
    GAS_TOKEN      = credentials('gas_token')
    OPENAI_API_KEY = credentials('openai_api_key')
    GAS_URL        = credentials('gas_url')        // nouveau: pour récupérer le prompt
    GAS_DOC_ID     = credentials('gas_doc_id')     // nouveau: ID du Google Doc
    KEEP_PCT       = '20'
    MODE           = 'DAILY'
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/paulsmpl/voice-to-transcript-gas-app.git'
      }
    }
    stage('Setup Python') {
      steps {
        sh '''
          /usr/bin/python3 -m pip install --upgrade pip
          /usr/bin/python3 -m pip install -r requirements.txt
        '''
      }
    }
    stage('Compute date') {
      steps {
        script {
          if (env.MODE == 'DAILY') {
            env.DATE_TO_PROCESS = sh(
              script: "python - <<'PY'\nfrom datetime import datetime,timedelta;print((datetime.utcnow()-timedelta(days=1)).strftime('%Y-%m-%d'))\nPY",
              returnStdout: true
            ).trim()
          }
        }
      }
    }
    stage('Process daily') {
      when { expression { env.MODE == 'DAILY' } }
      steps {
        sh """
          # 1) Check status
          curl -sS '${GAS_BASE_URL}?action=status&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}' -o status.json
          python - <<'PY'
import json,sys
s=json.load(open('status.json'))
if not s['hasInput']: sys.exit(0)
if s['hasBestof']: sys.exit(0)
PY

          # 2) Download audios
          curl -sS '${GAS_BASE_URL}?action=zip&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}' -o audios_${DATE_TO_PROCESS}.zip

          # 3) Best-of
          export OPENAI_API_KEY='${OPENAI_API_KEY}'
          . venv/bin/activate
          python zip_bestof_whisperx.py audios_${DATE_TO_PROCESS}.zip \
            --keep_pct ${KEEP_PCT} \
            --out_dir out_${DATE_TO_PROCESS} \
            --gas_url '${GAS_URL}' \
            --doc_id '${GAS_DOC_ID}'

          # 4) Upload
          curl -sS -X POST '${GAS_BASE_URL}?action=uploadBestof&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}' \
               --data-binary @out_${DATE_TO_PROCESS}/bestof.mp3

          # 5) Archive
          curl -sS -X POST '${GAS_BASE_URL}?action=archive&date=${DATE_TO_PROCESS}&token=${GAS_TOKEN}'
        """
      }
    }
  }
}
